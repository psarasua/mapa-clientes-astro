---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
---

<Layout title="Repartos - Gestión de Clientes">
  <Navigation />
  
  <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
      <!-- Header -->
      <div class="md:flex md:items-center md:justify-between mb-6">
        <div class="flex-1 min-w-0">
          <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
            📦 Repartos
          </h2>
          <p class="mt-1 text-sm text-gray-500">
            Asigna camiones a días específicos para organizar los repartos
          </p>
        </div>
        <div class="mt-4 flex md:mt-0 md:ml-4">
          <button
            id="btn-nuevo-reparto"
            class="ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            ➕ Nuevo Reparto
          </button>
        </div>
      </div>

      <!-- Filtros -->
      <div class="bg-white shadow rounded-lg mb-6">
        <div class="px-4 py-5 sm:p-6">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label for="filtro-camion" class="block text-sm font-medium text-gray-700">
                Filtrar por Camión
              </label>
              <select id="filtro-camion" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <option value="">Todos los camiones</option>
              </select>
            </div>
            <div>
              <label for="filtro-dia" class="block text-sm font-medium text-gray-700">
                Filtrar por Día
              </label>
              <select id="filtro-dia" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <option value="">Todos los días</option>
              </select>
            </div>
            <div class="flex items-end">
              <button
                id="btn-limpiar-filtros"
                class="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
              >
                🗑️ Limpiar Filtros
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Lista de Repartos -->
      <div class="bg-white shadow overflow-hidden sm:rounded-md">
        <div class="px-4 py-5 sm:p-6">
          <div id="repartos-lista" class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
            <div class="animate-pulse">
              <div class="h-40 bg-gray-200 rounded-lg"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Modal para Nuevo/Editar Reparto -->
  <div id="modal-reparto" class="fixed inset-0 z-50 hidden overflow-y-auto">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div class="fixed inset-0 transition-opacity" aria-hidden="true">
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
      </div>
      
      <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
        <form id="form-reparto">
          <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
            <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4" id="modal-title">
              Nuevo Reparto
            </h3>
            
            <div class="mb-4">
              <label for="reparto-camion" class="block text-sm font-medium text-gray-700">
                Camión
              </label>
              <select
                id="reparto-camion"
                required
                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
              >
                <option value="">Selecciona un camión</option>
              </select>
            </div>
            
            <div class="mb-4">
              <label for="reparto-dia" class="block text-sm font-medium text-gray-700">
                Día de Entrega
              </label>
              <select
                id="reparto-dia"
                required
                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
              >
                <option value="">Selecciona un día</option>
              </select>
            </div>
            
            <div class="mb-4">
              <label for="reparto-descripcion" class="block text-sm font-medium text-gray-700">
                Descripción (opcional)
              </label>
              <textarea
                id="reparto-descripcion"
                rows="3"
                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                placeholder="Ej: Zona Norte - Ruta especial"
              ></textarea>
            </div>
          </div>
          <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
            <button
              type="submit"
              class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm"
            >
              Guardar
            </button>
            <button
              type="button"
              id="btn-cancelar"
              class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
            >
              Cancelar
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</Layout>

<script>
  let repartoEditando = null;
  let camiones = [];
  let dias = [];
  let repartos = [];

  const emojisDiv = {
    'Lunes': '🌙',
    'Martes': '🔥',
    'Miércoles': '🌿',
    'Jueves': '⚡',
    'Viernes': '🎉',
    'Sábado': '🌞',
    'Domingo': '☀️'
  };

  async function cargarDatos() {
    try {
      // Cargar camiones
      const camionesResponse = await fetch('/api/camiones');
      const camionesResult = await camionesResponse.json();
      if (camionesResult.success) {
        camiones = camionesResult.data || [];
      }

      // Cargar días
      const diasResponse = await fetch('/api/dias-entrega');
      const diasResult = await diasResponse.json();
      if (diasResult.success) {
        dias = diasResult.data || [];
      }

      // Cargar repartos
      await cargarRepartos();
      
      // Poblar filtros y selects
      poblarFiltros();
      poblarSelects();
      
    } catch (error) {
      console.error('Error cargando datos:', error);
    }
  }

  async function cargarRepartos() {
    try {
      const response = await fetch('/api/repartos');
      const result = await response.json();
      
      if (result.success && result.data) {
        repartos = result.data;
        mostrarRepartos(repartos);
      }
    } catch (error) {
      console.error('Error cargando repartos:', error);
      document.getElementById('repartos-lista').innerHTML = `
        <div class="col-span-full text-center py-8 text-red-500">
          Error cargando repartos. Inténtalo de nuevo.
        </div>
      `;
    }
  }

  function mostrarRepartos(repartosData) {
    const lista = document.getElementById('repartos-lista');
    lista.innerHTML = '';
    
    if (repartosData.length === 0) {
      lista.innerHTML = `
        <div class="col-span-full text-center py-8 text-gray-500">
          <p class="text-lg">No hay repartos configurados</p>
          <button onclick="abrirModal()" class="mt-2 text-indigo-600 hover:text-indigo-500">
            Crear el primer reparto
          </button>
        </div>
      `;
      return;
    }
    
    repartosData.forEach(reparto => {
      const camion = camiones.find(c => c.id === reparto.camion_id);
      const dia = dias.find(d => d.id === reparto.dia_id);
      
      const repartoElement = document.createElement('div');
      repartoElement.className = 'bg-gradient-to-br from-indigo-50 to-indigo-100 border border-indigo-200 rounded-lg p-6 hover:shadow-md transition-shadow';
      repartoElement.innerHTML = `
        <div class="flex items-start justify-between mb-4">
          <div class="flex items-center space-x-3">
            <div class="text-2xl">🚛</div>
            <div class="text-2xl">${emojisDiv[dia?.nombre] || '📅'}</div>
          </div>
          <div class="flex space-x-2">
            <button 
              onclick="editarReparto(${reparto.id})"
              class="text-blue-600 hover:text-blue-900 text-sm"
            >
              ✏️
            </button>
            <button 
              onclick="eliminarReparto(${reparto.id})"
              class="text-red-600 hover:text-red-900 text-sm"
            >
              🗑️
            </button>
          </div>
        </div>
        <div class="space-y-2">
          <h4 class="text-lg font-medium text-gray-900">
            ${camion?.nombre || 'Camión no encontrado'}
          </h4>
          <p class="text-sm font-medium text-indigo-600">
            ${dia?.nombre || 'Día no encontrado'}
          </p>
          ${reparto.descripcion ? `<p class="text-sm text-gray-600">${reparto.descripcion}</p>` : ''}
          <div class="pt-2 border-t border-indigo-200">
            <p class="text-xs text-gray-500">ID: ${reparto.id}</p>
            <p class="text-xs text-gray-400">
              Creado: ${new Date(reparto.created_at || reparto.fecha_creacion).toLocaleDateString()}
            </p>
          </div>
        </div>
      `;
      lista.appendChild(repartoElement);
    });
  }

  function poblarFiltros() {
    const filtroCamion = document.getElementById('filtro-camion');
    const filtroDia = document.getElementById('filtro-dia');
    
    // Limpiar opciones existentes (excepto la primera)
    filtroCamion.innerHTML = '<option value="">Todos los camiones</option>';
    filtroDia.innerHTML = '<option value="">Todos los días</option>';
    
    // Agregar camiones
    camiones.forEach(camion => {
      const option = document.createElement('option');
      option.value = camion.id;
      option.textContent = camion.nombre;
      filtroCamion.appendChild(option);
    });
    
    // Agregar días
    dias.forEach(dia => {
      const option = document.createElement('option');
      option.value = dia.id;
      option.textContent = dia.nombre;
      filtroDia.appendChild(option);
    });
  }

  function poblarSelects() {
    const selectCamion = document.getElementById('reparto-camion');
    const selectDia = document.getElementById('reparto-dia');
    
    // Limpiar opciones existentes (excepto la primera)
    selectCamion.innerHTML = '<option value="">Selecciona un camión</option>';
    selectDia.innerHTML = '<option value="">Selecciona un día</option>';
    
    // Agregar camiones
    camiones.forEach(camion => {
      const option = document.createElement('option');
      option.value = camion.id;
      option.textContent = camion.nombre;
      selectCamion.appendChild(option);
    });
    
    // Agregar días
    dias.forEach(dia => {
      const option = document.createElement('option');
      option.value = dia.id;
      option.textContent = dia.nombre;
      selectDia.appendChild(option);
    });
  }

  function filtrarRepartos() {
    const filtroCamionId = document.getElementById('filtro-camion').value;
    const filtroDiaId = document.getElementById('filtro-dia').value;
    
    let repartosFiltrados = repartos;
    
    if (filtroCamionId) {
      repartosFiltrados = repartosFiltrados.filter(r => r.camion_id.toString() === filtroCamionId);
    }
    
    if (filtroDiaId) {
      repartosFiltrados = repartosFiltrados.filter(r => r.dia_id.toString() === filtroDiaId);
    }
    
    mostrarRepartos(repartosFiltrados);
  }

  function limpiarFiltros() {
    document.getElementById('filtro-camion').value = '';
    document.getElementById('filtro-dia').value = '';
    mostrarRepartos(repartos);
  }

  function abrirModal(id = null) {
    repartoEditando = id;
    document.getElementById('modal-title').textContent = id ? 'Editar Reparto' : 'Nuevo Reparto';
    
    if (id) {
      const reparto = repartos.find(r => r.id === id);
      if (reparto) {
        document.getElementById('reparto-camion').value = reparto.camion_id;
        document.getElementById('reparto-dia').value = reparto.dia_id;
        document.getElementById('reparto-descripcion').value = reparto.descripcion || '';
      }
    }
    
    document.getElementById('modal-reparto').classList.remove('hidden');
  }

  function cerrarModal() {
    repartoEditando = null;
    document.getElementById('modal-reparto').classList.add('hidden');
    document.getElementById('form-reparto').reset();
  }

  async function guardarReparto(event) {
    event.preventDefault();
    
    const camionId = parseInt(document.getElementById('reparto-camion').value);
    const diaId = parseInt(document.getElementById('reparto-dia').value);
    const descripcion = document.getElementById('reparto-descripcion').value;
    
    const method = repartoEditando ? 'PUT' : 'POST';
    const url = repartoEditando ? `/api/repartos/${repartoEditando}` : '/api/repartos';
    
    try {
      const response = await fetch(url, {
        method,
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ 
          camion_id: camionId, 
          dia_id: diaId, 
          descripcion 
        })
      });
      
      if (response.ok) {
        cerrarModal();
        await cargarRepartos();
      } else {
        const error = await response.json();
        alert(error.error || 'Error al guardar el reparto');
      }
    } catch (error) {
      console.error('Error guardando reparto:', error);
      alert('Error al guardar el reparto');
    }
  }

  function editarReparto(id) {
    abrirModal(id);
  }

  async function eliminarReparto(id) {
    if (!confirm('¿Estás seguro de que quieres eliminar este reparto?')) {
      return;
    }
    
    try {
      const response = await fetch(`/api/repartos/${id}`, {
        method: 'DELETE'
      });
      
      if (response.ok) {
        await cargarRepartos();
      } else {
        alert('Error al eliminar el reparto');
      }
    } catch (error) {
      console.error('Error eliminando reparto:', error);
      alert('Error al eliminar el reparto');
    }
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    cargarDatos();
    
    document.getElementById('btn-nuevo-reparto').addEventListener('click', () => abrirModal());
    document.getElementById('btn-cancelar').addEventListener('click', cerrarModal);
    document.getElementById('form-reparto').addEventListener('submit', guardarReparto);
    document.getElementById('btn-limpiar-filtros').addEventListener('click', limpiarFiltros);
    
    // Filtros
    document.getElementById('filtro-camion').addEventListener('change', filtrarRepartos);
    document.getElementById('filtro-dia').addEventListener('change', filtrarRepartos);
    
    // Cerrar modal al hacer clic fuera
    document.getElementById('modal-reparto').addEventListener('click', (e) => {
      if (e.target.id === 'modal-reparto') {
        cerrarModal();
      }
    });
  });
</script>
